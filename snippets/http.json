{
    "Get request block": {
        "prefix": "get",
        "body": [
            "GET ${1:url} HTTP/1.1"
        ],
        "description": "GET Request"
    },
    "Delete request block": {
        "prefix": "delete",
        "body": [
            "DELETE ${1:url} HTTP/1.1"
        ],
        "description": "DELETE Request"
    },
    "Post request block": {
        "prefix": "post",
        "body": [
            "POST ${1:url} HTTP/1.1",
            "${2:header name}: ${3:header value}",
            "",
            "${4:content}"
        ],
        "description": "POST Request"
    },
    "Put request block": {
        "prefix": "put",
        "body": [
            "PUT ${1:url} HTTP/1.1",
            "${2:header name}: ${3:header value}",
            "",
            "${4:content}"
        ],
        "description": "PUT Request"
    },
    "SOAP request block": {
        "prefix": "soap",
        "body": [
            "POST ${1:url} HTTP/1.1",
            "Content-Type: application/soap+xml",
            "${2:header name}: ${3:header value}",
            "",
            "<soap:Envelope",
            "\txmlns:soap=\"http://www.w3.org/2001/12/soap-envelope\"",
            "\tsoap:encodingStyle=\"http://www.w3.org/2001/12/soap-encoding\">",
            "\t<soap:Body>",
            "\t\t${4:content}",
            "\t</soap:Body>",
            "</soap:Envelope>"
        ],
        "description": "SOAP Request"
    },
    "multipart/form-data request block": {
        "prefix": "mfr",
        "body": [
            "POST ${1:url} HTTP/1.1",
            "Content-Type: multipart/form-data; boundary=WebAppBoundary",
            "",
            "--WebAppBoundary",
            "Content-Disposition: form-data; name=\"${2:field-name}\"",
            "",
            "${3:field-value}",
            "--WebAppBoundary",
            "Content-Disposition: form-data; name=\"${4:field-name}\"; filename=\"${5:file-name.txt}\"",
            "",
            "< ${6:./relative/path/to/local_file.txt}",
            "--WebAppBoundary--"
        ],
        "description": "multipart/form-data request with text and file data "
    },
    "Script block": {
        "prefix": "js",
        "body": [
            "{{",
            "${0:content}",
            "}}"
        ],
        "description": "Javascript Block"
    },
    "Streaming script block": {
        "prefix": "stream",
        "body": [
            "{{@streaming",
            "  async function writeStream(){",
            "    await sleep(1000);",
            "    await sleep(1000);",
            "  }",
            "  exports.waitPromise = writeStream();",
            "}}"
        ],
        "description": "Streaming Script Block"
    },
    "MQTT block": {
        "prefix": "mqtt",
        "body": [
            "# @keepStreaming",
            "MQTT ${1:url}",
            "Topic: ${2:topic}"
        ],
        "description": "MQTT Request"
    },
    "MQTT Test block": {
        "prefix": "mqtt_test",
        "body": [
            "MQTT ${1:url}",
            "Topic: ${2:topic}",
            "",
            "{{@streaming",
            "  async function writeStream(){",
            "    await sleep(1000);",
            "    mqttClient.publish('${2:topic}', '${3:message}');",
            "    await sleep(1000);",
            "  }",
            "  exports.waitPromise = writeStream();",
            "}}"
        ],
        "description": "MQTT Test Request"
    },
    "WebSocket block": {
        "prefix": "wss",
        "body": [
            "# @keepStreaming",
            "WS ${1:url}"
        ],
        "description": "WebSocket Request"
    },
    "WebSocket Test block": {
        "prefix": "wss_test",
        "body": [
            "WS ${1:url}",
            "",
            "{{@streaming",
            "  async function writeStream(){",
            "    await sleep(1000);",
            "    websocketClient.send('${2:message}');",
            "    await sleep(1000);",
            "  }",
            "  exports.waitPromise = writeStream();",
            "}}"
        ],
        "description": "WebSocket Test Request"
    },
    "Server-Sent Event block": {
        "prefix": "sse",
        "body": [
            "# @keepStreaming",
            "SSE ${1:url}",
            "Event: ${2:event}"
        ],
        "description": "Server-Sent Event Request"
    },
    "Proto Import": {
        "prefix": "proto",
        "body": [
            "proto < ${1:proto fileName}"
        ],
        "description": "Proto Loader Import"
    },
    "GRPC block": {
        "prefix": "grpc",
        "body": [
            "GRPC ${1:url}/${2:serviceName}/${3:method}"
        ],
        "description": "GRPC Request"
    }
}