{
	"name": "vscode-httpyac",
	"displayName": "httpYac - Yet Another Client",
	"license": "MIT",
	"publisher": "anweber",
	"description": "Quickly and easily send REST, SOAP, and GraphQL requests directly within Visual Studio Code",
	"version": "1.3.1",
	"homepage": "https://github.com/AnWeber/vscode-httpyac",
	"repository": {
		"type": "git",
		"url": "https://github.com/AnWeber/vscode-httpyac"
	},
	"bugs": {
		"url": "https://github.com/AnWeber/vscode-httpyac/issues"
	},
	"icon": "icon.png",
	"engines": {
		"vscode": "^1.50.0"
	},
	"categories": [
		"Other",
		"Snippets",
		"Programming Languages"
	],
	"keywords": [
		"HTTP",
		"REST",
		"GraphQL",
		"Soap",
		"Client"
	],
	"activationEvents": [
		"onCommand:httpyac.send",
		"onCommand:httpyac.sendAll",
		"onLanguage:http"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"languages": [
			{
				"id": "http",
				"aliases": [
					"http",
					"Http",
					"HTTP"
				],
				"extensions": [
					"http",
					"rest"
				],
				"firstLine": "^\\s*(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)\\s+.*?$",
				"configuration": "./language-configuration.json"
			}
		],
		"snippets": [
			{
				"language": "http",
				"path": "./snippets/http.json"
			}
		],
		"grammars": [
			{
				"language": "http",
				"scopeName": "source.http",
				"path": "./syntaxes/http.tmLanguage.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "httpyac",
			"properties": {
				"httpyac.requestDefaultHeaders": {
					"type": "object",
					"default": {
						"User-Agent": "httpyac"
					},
					"scope": "resource",
					"description": "default request headers if not overwritten"
				},
				"httpyac.requestSslCertficateValidation": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "enable ssl certificate validation"
				},
				"httpyac.requestFollowRedirect": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "Defines if redirect responses should be followed automatically."
				},
				"httpyac.requestTimeout": {
					"type": "integer",
					"default": 0,
					"scope": "resource",
					"description": "Timeout in milliseconds. 0 for infinity"
				},
				"httpyac.environmentSelectedOnStart": {
					"type": "array",
					"scope": "resource",
					"description": "list of default environment on startup"
				},
				"httpyac.environmentVariables": {
					"type": "object",
					"scope": "resource",
					"default": {
						"$shared": {}
					},
					"description": "environment variables (e.g {\"dev\":{\"password\": \"123456\"}, prod: {\"password\": \"secure\"}}`)"
				},
				"httpyac.dotenvDirname": {
					"type": "string",
					"scope": "resource",
					"default": "env",
					"description": "relative or absolute path to folder with dotenv files"
				},
				"httpyac.dotenvDefaultFiles": {
					"type": "array",
					"default": [
						".env"
					],
					"scope": "resource",
					"description": "default dotenv files which is active in all profiles"
				},
				"httpyac.responseViewHeader": {
					"type": "array",
					"default": [
						"content-type",
						"content-length"
					],
					"scope": "resource",
					"description": "headers visible in code lens of response"
				},
				"httpyac.responseViewPreview": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "response view will act as preview tab"
				},
				"httpyac.responseViewReuseEditor": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "response view will open in text document of same language id"
				},
				"httpyac.responseViewPrettyPrint": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "response view pretty prints content"
				},
				"httpyac.responseViewPreserveFocus": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "response view will take focus after receiving response"
				},
				"httpyac.responseViewColumn": {
					"type": "string",
					"enum": [
						"current",
						"beside"
					],
					"markdownEnumDescriptions": [
						"Preview in the column of current request file",
						"previewing at the side of the current active column and the side direction depends on `workbench.editor.openSideBySideDirection` setting, either right or below the current editor column"
					],
					"default": "beside",
					"scope": "resource",
					"description": "response preview column option"
				},
				"httpyac.showGutterIcon": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "show gutter icon to highlight request lines"
				},
				"httpyac.extensionScript": {
					"type": "string",
					"scope": "window",
					"description": "Path to a script with extensions for HttpYac"
				}
			}
		},
		"commands": [
			{
				"command": "httpyac.send",
				"title": "Send",
				"category": "httpYac"
			},
			{
				"command": "httpyac.sendall",
				"title": "Send all",
				"category": "httpYac"
			},
			{
				"command": "httpyac.resend",
				"title": "Resend last",
				"category": "httpYac"
			},
			{
				"command": "httpyac.show",
				"title": "Show response",
				"category": "httpYac"
			},
			{
				"command": "httpyac.viewHeader",
				"title": "Show headers",
				"category": "httpYac"
			},
			{
				"command": "httpyac.save",
				"title": "Save response",
				"category": "httpYac"
			},
			{
				"command": "httpyac.clearall",
				"title": "Clear all responses",
				"category": "httpYac"
			},
			{
				"command": "httpyac.toggle-env",
				"title": "Toggle environment",
				"category": "httpYac"
			},
			{
				"command": "httpyac.toggle-allenv",
				"title": "Toogle environment of all files",
				"category": "httpYac"
			},
			{
				"command": "httpyac.refresh",
				"title": "refresh environments",
				"category": "httpYac"
			}
		],
		"menus": {
			"editor/title": [
				{
					"command": "httpyac.sendall",
					"when": "editorTextFocus && editorLangId == http",
					"group": "httpyac@1"
				},
				{
					"command": "httpyac.clearall",
					"when": "editorTextFocus && editorLangId == http",
					"group": "httpyac@1"
				},
				{
					"command": "httpyac.toggle-env",
					"when": "editorTextFocus && editorLangId == http",
					"group": "httpyac@1"
				},
				{
					"command": "httpyac.toggle-allenv",
					"when": "editorLangId == http",
					"group": "httpyac@1"
				}
			]
		},
		"keybindings": [
			{
				"command": "httpyac.send",
				"key": "ctrl+alt+r",
				"mac": "cmd+alt+r",
				"when": "editorTextFocus && editorLangId == 'http'"
			},
			{
				"command": "httpyac.resend",
				"key": "ctrl+alt+l",
				"mac": "cmd+alt+l",
				"when": "editorTextFocus && editorLangId == 'http'"
			},
			{
				"command": "httpyac.toggle-env",
				"key": "ctrl+alt+e",
				"mac": "cmd+alt+e"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack --config ./webpack.config.js",
		"watch": "webpack --watch --config ./webpack.config.js",
		"package": "webpack --mode production --devtool hidden-source-map --config ./webpack.config.js",
		"lint": "eslint src --ext ts"
	},
	"devDependencies": {
		"@types/mime-types": "^2.1.0",
		"@types/lodash": "^4.14.168",
		"@types/node": "^14.14.22",
		"@types/vscode": "^1.50.0",
		"@types/uuid": "^8.3.0",
		"@typescript-eslint/eslint-plugin": "^4.14.0",
		"@typescript-eslint/parser": "^4.14.0",
		"eslint": "^7.18.0",
		"ts-loader": "^8.0.14",
		"typescript": "^4.1.3",
		"webpack": "^5.16.0",
		"webpack-cli": "^4.4.0"
	},
	"dependencies": {
		"dotenv": "^8.2.0",
		"encodeurl": "^1.0.2",
		"got": "^11.8.1",
		"http-proxy-agent": "^4.0.1",
		"https-proxy-agent": "^5.0.0",
		"httpyac": "^1.3.0",
		"lodash": "^4.17.20",
		"mime-types": "^2.1.28",
		"tmp-promise": "^3.0.2",
		"uuid": "^8.3.2"
	}
}
